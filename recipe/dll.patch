commit 071092797186f55bc660fcff9b517f075f1d4501
Author: Isuru Fernando <isuruf@gmail.com>
Date:   Tue Aug 20 20:35:39 2019 -0500

    Add DLL support

diff --git a/configure.ac b/configure.ac
index ec7ae592..329a44c2 100644
--- a/configure.ac
+++ b/configure.ac
@@ -308,5 +308,11 @@ AS_IF([test x$enable_enfnormaliz = xyes],
   [DEFINE_ENFNORMALIZ="#define ENFNORMALIZ"
    AC_SUBST([DEFINE_ENFNORMALIZ])])
 
+AS_IF([test x$enable_shared = xyes],
+    [AC_DEFINE(DEFINE_NORMALIZ_DLL)
+    DEFINE_NORMALIZ_DLL="#define NORMALIZ_USE_DLL"
+    AC_SUBST([DEFINE_NORMALIZ_DLL])])
+
+
 AC_OUTPUT
 
diff --git a/source/Makefile.am b/source/Makefile.am
index b96298d2..c4715e21 100644
--- a/source/Makefile.am
+++ b/source/Makefile.am
@@ -42,7 +42,7 @@ noinst_HEADERS = libnormaliz/simplex.h libnormaliz/reduction.h libnormaliz/full_
 noinst_HEADERS += libnormaliz/input_type.cpp libnormaliz/integer.cpp libnormaliz/vector_operations.cpp libnormaliz/matrix.cpp libnormaliz/simplex.cpp libnormaliz/list_operations.cpp libnormaliz/sublattice_representation.cpp libnormaliz/reduction.cpp libnormaliz/full_cone.cpp libnormaliz/cone_dual_mode.cpp libnormaliz/cone.cpp libnormaliz/project_and_lift.cpp libnormaliz/HilbertSeries.cpp libnormaliz/cone_property.cpp libnormaliz/bottom.cpp libnormaliz/descent.cpp libnormaliz/output.cpp libnormaliz/general.cpp
 noinst_HEADERS += libnormaliz/nmz_polynomial.cpp libnormaliz/nmz_integral.cpp libnormaliz/automorph.cpp libnormaliz/nmz_nauty.h
 
-libnormaliz_la_LDFLAGS = -version-info 10:4:7
+libnormaliz_la_LDFLAGS = -no-undefined -version-info 10:4:7
 ## Conjecture: x.y.z yields x-z.z.y
 libnormaliz_la_LIBADD = $(GMP_LDFLAGS) -lgmpxx -lgmp
 
diff --git a/source/libnormaliz/general.h b/source/libnormaliz/general.h
index 7e4628ef..eb83bb86 100644
--- a/source/libnormaliz/general.h
+++ b/source/libnormaliz/general.h
@@ -33,6 +33,19 @@
 #ifndef NMZ_MAKEFILE_CLASSIC
 #include <libnormaliz/nmz_config.h>
 #endif
+
+#ifdef _WIN32
+  #if defined(DLL_EXPORT)
+    #define NORMALIZ_DLL_EXPORT __declspec(dllexport)
+  #elif defined(NORMALIZ_USE_DLL) && !defined(NORMALIZ_USE_STATIC)
+    #define NORMALIZ_DLL_EXPORT __declspec(dllimport)
+  #else
+    #define NORMALIZ_DLL_EXPORT
+  #endif
+#else
+  #define NORMALIZ_DLL_EXPORT
+#endif
+
 #ifndef NMZ_DEVELOP
 #include "libnormaliz/version.h"
 #endif
@@ -70,16 +83,16 @@ const nmz_float nmz_epsilon=1.0e-12;
  * it has to be able to hold number of generators */
 typedef unsigned int key_t;
 
-extern bool verbose;
-extern size_t GMP_mat, GMP_hyp, GMP_scal_prod;
-extern size_t TotDet;
+NORMALIZ_DLL_EXPORT extern bool verbose;
+NORMALIZ_DLL_EXPORT extern size_t GMP_mat, GMP_hyp, GMP_scal_prod;
+NORMALIZ_DLL_EXPORT extern size_t TotDet;
 /*
  * If this variable is set to true, the current computation is interrupted and
  * an InterruptException is raised.
  */
-extern volatile sig_atomic_t nmz_interrupted;
+NORMALIZ_DLL_EXPORT extern volatile sig_atomic_t nmz_interrupted;
 
-extern bool nmz_scip; // controls the use of Scip
+NORMALIZ_DLL_EXPORT extern bool nmz_scip; // controls the use of Scip
 
 #define INTERRUPT_COMPUTATION_BY_EXCEPTION \
 if(nmz_interrupted){ \
@@ -91,9 +104,9 @@ if(nmz_interrupted){ \
 // extern bool test_arithmetic_overflow;
 // extern long overflow_test_modulus;
 
-extern long default_thread_limit;
-extern long thread_limit;
-extern bool parallelization_set;
+NORMALIZ_DLL_EXPORT extern long default_thread_limit;
+NORMALIZ_DLL_EXPORT extern long thread_limit;
+NORMALIZ_DLL_EXPORT extern bool parallelization_set;
 long set_thread_limit(long t);
 
 /* set the verbose default value */
diff --git a/source/libnormaliz/nmz_config.h.in b/source/libnormaliz/nmz_config.h.in
index d45ee05e..094ab987 100644
--- a/source/libnormaliz/nmz_config.h.in
+++ b/source/libnormaliz/nmz_config.h.in
@@ -13,3 +13,4 @@
 @DEFINE_NMZFLINT@
 @DEFINE_NMZCOCOA@
 @DEFINE_NMZSCIP@
+@DEFINE_NORMALIZ_DLL@
